/**
 * @file test-plan.dox
 * @author M Zaki (mamadov_zicx@gmail.com)
 * @brief 
 * @version 0.1
 * @date 2022-11-15
 * 
 * @copyright Copyright (c) 2022
 * 
 */



/**
 * @page page1 Test Plan
 * @section test-plan-description Description
 * @parblock 
 * Testing will be considered a subproject with its own `CMakeLists.txt` file.
 * Up to this point, a single executable will run all tests, as specified in 
 * the `CMakeLists.txt` script (this may change).
 * 
 * Each container is going to have its own test fixture class in `.h` file, and
 * a set of test cases grouped in a `.cpp` file carying the same name as the test
 * fixture header file.
 * 
 * The main test tool used is google's test framework **gtest**, support for **catch2**
 * framework is added in the cmake script as well just in case.
 * 
 * Compiling test files generate 2 executables, one of them is compiled against cxx11 
 * standard and the other against cxx17 standards (the default).
 * @endparblock
 * 
 * 
 * The test directory is structured into the following subdirectories:
 * - `fixtures`: contains text fixture class header files
 * - `test_suites`: contains source files, each file contains a suite of test cases
 * - `helpers`: contains header/source files for helper methods and functions
 * - `reports`: contains xml reports generated by gtest
 * 
 * And contains the following files:
 * - `CMakeLists.txt`: CMake script.
 * - `runner.cp`: test driver executable.
 * 
 * @section test-fixture Test Fixtures
 * Type-paramtrized test fixtures are used primarly in creating test fixtures.
 * @see [GTest | Type-Parameterized Tests](http://google.github.io/googletest/advanced.html#type-parameterized-tests)
 * 
 * @section test-suites Test Suites
 * 
 */

